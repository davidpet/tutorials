{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28600\viewh14980\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ***see tutorials/ios/playgrounds in my github repo\
\
-source files have .Swift extension\
-Swift does not have a base object type (like C++, unlike C# and Objective-C)\
-Swift is refcounted rather than garbage collected\
\
*questions inside the playgrounds to resolve over time\
**also want to fit in almost-empty playgrounds like Modules, Functional Programming. etc.\
\
https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/\
	*has API reference and language guide\
\
Pro Swift: sections left = 1: pattern matching, nesting, markup; 7: OOP, POP, MVC, MVVM, command-line\
	***remember the videos also (none watched)\
\
TODO: how to do generator/yield type stuff in Swift?  (like lazy sequence but have the elements totally computed when needed, hopefully with a closure)\
TODO: is there a list type like in clojure that can be lazy, etc. or do you use array for that?\
TODO: Is there a way to declare a reference variable (like int& in C++)?\
TODO: modules (already have playground)\
TODO: how to use http instead of https for WKWebView?\
TODO: attributes (built-in, can you do custom?)\
TODO: optional chaining can be used in top-level statements (eg. before function calls) too\
TODO: putting ! on place that doesn\'92t need a ! like in function that implements closure?  (eg. askQuestion() in Project 2)\
TODO: selector syntax (eg. #selector(methodName))\
TODO: URL struct\
TODO: enumerated() method of array\
TODO: learn how webView(decidePolicyFor) from Project 4 works in detail (eg. what is @escaping)\
TODO: look into using smootherStep function for smooth interpolation (and also the clipping technique used)\
TODO: look into extending collections to allow safe nil for out of bound\
TODO: macros?  #ifdef?\
TODO: custom subscript operator\
TODO: iterators?\
TODO: bring in missing stuff (that still applies) from the Swift 2 tutorial\
TODO: look into times extension in chapter 7 of Pro Swift\
TODO: tip: use ?? after a try? to handle situations where throwing an error still results in valid state (eg. try to read a file that may not be there)\
TODO: are parameters mutable or immutable?\
TODO: table view basic cell vs. custom cell\
TODO: warnings about calling function and ignoring value (do you just use _?)(is there a return ignored macro)?\
TODO: Can you destructure such as head and tail of an array, first 3 items as variables, etc? like in Clojure?\
}