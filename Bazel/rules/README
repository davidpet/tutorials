# Parts of this Tutorial

- [basic](basic) - basics of (mostly) built-in rules and dependency management
  - [WORKSPACE](basic/WORKSPACE) - just there to make this folder into a bazel workspace.
  - [BUILD](basic/BUILD) - comments describe some high-level concepts like `bazel clean` and `bazel-bin`, etc.
  - [subpackage](basic/subfolder/subpackage) - basics of filegroup and genrule targets, and globbing
  - [pypackage](basic/subfolder/pypackage) - basics of libraries, binaries, srcs, data, deps, and runfiles. Python is used as the example, but the concepts are widely applicable.
  - [shell](basic/subfolder/shell) - run_binary, sh_binary, sh_library, sh_test

# bazel-bin

I purposely left bazel-bin in git (in the 'basic' workspace) because the structure demonstrates the concepts in the comments of the targets.
However, at the time I didn't realize it was a symbolic link and thus doesn't show anything useful.

# TODO

-       what repos archives, and calls in WORKSPACE actually do underneath
-       proto_library (dependencies, protoc, cwd, imports, grpcio-tools)
-       test and document usage of output file with $(location) for genrule with single output
    -   seems to only work with target name and not output file name, and works ok if only 1 output
