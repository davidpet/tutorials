load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# JS rules from Aspect Build team.
http_archive(
    name = "aspect_rules_js",
    sha256 = "e3e6c3d42491e2938f4239a3d04259a58adc83e21e352346ad4ef62f87e76125",
    strip_prefix = "rules_js-1.30.0",
    url = "https://github.com/aspect-build/rules_js/releases/download/v1.30.0/rules_js-v1.30.0.tar.gz",
)

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")

rules_js_dependencies()

load("@aspect_bazel_lib//lib:repositories.bzl", "aspect_bazel_lib_dependencies")

aspect_bazel_lib_dependencies()

# Register the following toolchain to use jq (part of Aspect Build lib above).

load("@aspect_bazel_lib//lib:repositories.bzl", "register_jq_toolchains")

register_jq_toolchains()

load("@rules_nodejs//nodejs:repositories.bzl", "DEFAULT_NODE_VERSION", "nodejs_register_toolchains")

nodejs_register_toolchains(
    name = "nodejs",
    node_version = DEFAULT_NODE_VERSION,
)

load("@aspect_rules_js//npm:repositories.bzl", "npm_translate_lock")

# Configures the use of NPM Packages in Bazel builds.
# Packages listed in pnpm-lock.yaml will become available via the @npm repo in Bazel.
#
# This creates a dependency on:
# 1. pnpm-lock.yaml - which must be generated via `pnpm import` command every time you change the npm packages
# 2. .bazelignore - which will prevent bazel from directly using node modules or angular cli dist folder during builds.
# 3. .npmrc - a specific setting is in there that we need
npm_translate_lock(
    name = "npm",
    bins = {
        "@angular/compiler-cli": {
            "ngcc": "./bundles/ngcc/main-ngcc.js",
        },
    },
    pnpm_lock = "//:pnpm-lock.yaml",
    npmrc = "//:.npmrc",
    verify_node_modules_ignored = "//:.bazelignore",
)

load("@npm//:repositories.bzl", "npm_repositories")

npm_repositories()
